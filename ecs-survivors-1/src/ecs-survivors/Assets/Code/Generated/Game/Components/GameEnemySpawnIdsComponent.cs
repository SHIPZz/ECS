//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnemySpawnIds;

    public static Entitas.IMatcher<GameEntity> EnemySpawnIds {
        get {
            if (_matcherEnemySpawnIds == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnemySpawnIds);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnemySpawnIds = matcher;
            }

            return _matcherEnemySpawnIds;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Enemies.EnemySpawnIds enemySpawnIds { get { return (Code.Gameplay.Features.Enemies.EnemySpawnIds)GetComponent(GameComponentsLookup.EnemySpawnIds); } }
    public System.Collections.Generic.List<Code.Gameplay.Features.Enemies.EnemyTypeId> EnemySpawnIds { get { return enemySpawnIds.Value; } }
    public bool hasEnemySpawnIds { get { return HasComponent(GameComponentsLookup.EnemySpawnIds); } }

    public GameEntity AddEnemySpawnIds(System.Collections.Generic.List<Code.Gameplay.Features.Enemies.EnemyTypeId> newValue) {
        var index = GameComponentsLookup.EnemySpawnIds;
        var component = (Code.Gameplay.Features.Enemies.EnemySpawnIds)CreateComponent(index, typeof(Code.Gameplay.Features.Enemies.EnemySpawnIds));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnemySpawnIds(System.Collections.Generic.List<Code.Gameplay.Features.Enemies.EnemyTypeId> newValue) {
        var index = GameComponentsLookup.EnemySpawnIds;
        var component = (Code.Gameplay.Features.Enemies.EnemySpawnIds)CreateComponent(index, typeof(Code.Gameplay.Features.Enemies.EnemySpawnIds));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnemySpawnIds() {
        RemoveComponent(GameComponentsLookup.EnemySpawnIds);
        return this;
    }
}
