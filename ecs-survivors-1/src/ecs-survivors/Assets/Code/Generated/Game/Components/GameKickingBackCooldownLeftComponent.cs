//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherKickingBackCooldownLeft;

    public static Entitas.IMatcher<GameEntity> KickingBackCooldownLeft {
        get {
            if (_matcherKickingBackCooldownLeft == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.KickingBackCooldownLeft);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherKickingBackCooldownLeft = matcher;
            }

            return _matcherKickingBackCooldownLeft;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.KickingBacks.KickingBackCooldownLeft kickingBackCooldownLeft { get { return (Code.Gameplay.Features.KickingBacks.KickingBackCooldownLeft)GetComponent(GameComponentsLookup.KickingBackCooldownLeft); } }
    public float KickingBackCooldownLeft { get { return kickingBackCooldownLeft.Value; } }
    public bool hasKickingBackCooldownLeft { get { return HasComponent(GameComponentsLookup.KickingBackCooldownLeft); } }

    public GameEntity AddKickingBackCooldownLeft(float newValue) {
        var index = GameComponentsLookup.KickingBackCooldownLeft;
        var component = (Code.Gameplay.Features.KickingBacks.KickingBackCooldownLeft)CreateComponent(index, typeof(Code.Gameplay.Features.KickingBacks.KickingBackCooldownLeft));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceKickingBackCooldownLeft(float newValue) {
        var index = GameComponentsLookup.KickingBackCooldownLeft;
        var component = (Code.Gameplay.Features.KickingBacks.KickingBackCooldownLeft)CreateComponent(index, typeof(Code.Gameplay.Features.KickingBacks.KickingBackCooldownLeft));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveKickingBackCooldownLeft() {
        RemoveComponent(GameComponentsLookup.KickingBackCooldownLeft);
        return this;
    }
}
