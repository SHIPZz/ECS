//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherKickingBackDamping;

    public static Entitas.IMatcher<GameEntity> KickingBackDamping {
        get {
            if (_matcherKickingBackDamping == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.KickingBackDamping);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherKickingBackDamping = matcher;
            }

            return _matcherKickingBackDamping;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.KickingBacks.KickingBackDamping kickingBackDamping { get { return (Code.Gameplay.Features.KickingBacks.KickingBackDamping)GetComponent(GameComponentsLookup.KickingBackDamping); } }
    public float KickingBackDamping { get { return kickingBackDamping.Value; } }
    public bool hasKickingBackDamping { get { return HasComponent(GameComponentsLookup.KickingBackDamping); } }

    public GameEntity AddKickingBackDamping(float newValue) {
        var index = GameComponentsLookup.KickingBackDamping;
        var component = (Code.Gameplay.Features.KickingBacks.KickingBackDamping)CreateComponent(index, typeof(Code.Gameplay.Features.KickingBacks.KickingBackDamping));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceKickingBackDamping(float newValue) {
        var index = GameComponentsLookup.KickingBackDamping;
        var component = (Code.Gameplay.Features.KickingBacks.KickingBackDamping)CreateComponent(index, typeof(Code.Gameplay.Features.KickingBacks.KickingBackDamping));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveKickingBackDamping() {
        RemoveComponent(GameComponentsLookup.KickingBackDamping);
        return this;
    }
}
